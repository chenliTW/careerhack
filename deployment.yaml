---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: careerhack-business
spec:
  selector:
    matchLabels:
      app: careerhack-business
  replicas: 2
  template:
    metadata:
      labels:
        app: careerhack-business
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - tsmchack2023-gce-grp4-1
                - tsmchack2023-gce-grp4-5
      containers:
      - name: careerhack-business
        image: zxvbjl/aa:latest
        imagePullPolicy: Always
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: WEB_PORT
          value: "8100"
        - name: INVENTORY_URL
          value: "http://careerhack-inventory:8200/api"
        - name: STORAGE_URL
          value: "http://careerhack-storage:8300/api"
        ports:
        - containerPort: 8100
        #livenessProbe:
        #  httpGet:
        #    path: /api/health
        #    port: 8100
        #  initialDelaySeconds: 5
        #  periodSeconds: 1
        #  failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - /app/check-readiness.sh
          initialDelaySeconds: 10
          periodSeconds: 1
          failureThreshold: 1
        resources:
          limits:
            cpu: "2"
            memory: 8192M
          requests:
            cpu: "0.2"
            memory: 200M
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 705600
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 705600
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: careerhack-inventory
  annotations:
    downscaler/exclude: "true"
spec:
  podManagementPolicy: Parallel
  serviceName: "careerhack-inventory"
  selector:
    matchLabels:
      app: careerhack-inventory
  replicas: 2
  template:
    metadata:
      labels:
        app: careerhack-inventory
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - tsmchack2023-gce-grp4-2
                - tsmchack2023-gce-grp4-5
      containers:
      - name: careerhack-inventory
        image: zxvbjl/bb:latest
        imagePullPolicy: Always
        env:
        - name: WEB_PORT
          value: "8200"
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - containerPort: 8200
        #livenessProbe:
        #  httpGet:
        #    path: /api/health
        #    port: 8200
        #  initialDelaySeconds: 5
        #  periodSeconds: 1
        #  failureThreshold: 2
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - /app/check-readiness.sh
          initialDelaySeconds: 5
          periodSeconds: 1
          failureThreshold: 1
        resources:
          limits:
            cpu: "2"
            memory: 8192M
          requests:
            cpu: "0.2"
            memory: 200M
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 705600
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 705600
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: careerhack-storage
  annotations:
    downscaler/exclude: "true"
spec:
  podManagementPolicy: Parallel
  serviceName: "careerhack-storage"
  selector:
    matchLabels:
      app: careerhack-storage
  replicas: 2
  template:
    metadata:
      labels:
        app: careerhack-storage
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - tsmchack2023-gce-grp4-3
                - tsmchack2023-gce-grp4-4
      containers:
      - name: careerhack-storage
        image: zxvbjl/cc:latest
        imagePullPolicy: Always
        env:
        - name: WEB_PORT
          value: "8300"
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - containerPort: 8300
        #livenessProbe:
        # httpGet:
        #    path: /api/health
        #    port: 8300
        #  initialDelaySeconds: 5
        #  periodSeconds: 1
        #  failureThreshold: 2
        #readinessProbe:
        #  exec:
        #    command:
        #    - /bin/sh
        #    - -c
        #    - /app/check-readiness.sh
        #  initialDelaySeconds: 5
        #  periodSeconds: 1
        #  failureThreshold: 1
        resources:
          limits:
            cpu: "2"
            memory: 6114M
          requests:
            cpu: "0.2"
            memory: 200M
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 705600
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 705600
---
apiVersion: v1
kind: Service
metadata:
  name: careerhack-business
spec:
  type: NodePort
  selector:
    app: careerhack-business
  ports:
    - protocol: TCP
      name: business
      targetPort: 8100
      port: 8100
      nodePort: 8100
---
apiVersion: v1
kind: Service
metadata:
  name: careerhack-inventory
spec:
  type: NodePort
  selector:
    app: careerhack-inventory
  ports:
    - protocol: TCP
      name: inventory
      targetPort: 8200
      port: 8200
      nodePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: careerhack-storage
spec:
  type: NodePort
  selector:
    app: careerhack-storage
  ports:
    - protocol: TCP
      name: storage
      targetPort: 8300
      port: 8300
      nodePort: 443